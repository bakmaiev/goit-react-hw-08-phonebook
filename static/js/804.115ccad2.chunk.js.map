{"version":3,"file":"static/js/804.115ccad2.chunk.js","mappings":"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","sources":["components/ContactsFilter/Filter.styled.js","redux/contacts/selectors.js","components/ContactsFilter/Filter.jsx","components/ContactsList/ContactsList.styled.js","components/PhonebookForm/PhonebookForm.styled.js","components/ContactsList/ContactsList.jsx","components/PhonebookForm/PhonebookForm.jsx","components/Title/Title.styled.js","components/Title/Title.jsx","pages/Contacts.jsx","redux/auth/selectors.js"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const FilterInput = styled.input`\n  color: #333;\n  font-size: 20px;\n  margin: 0 auto;\n  padding: 10px;\n  border-radius: 2px;\n  background-color: rgb(255, 255, 255);\n  border: none;\n  outline: none;\n  max-width: 100%;\n  border-bottom: 1px solid transparent;\n  box-shadow: rgba(45, 35, 66, 0.4) 0 2px 4px,\n    rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #d6d6e7 0 -3px 0;\n  transition: all 0.3s;\n`;\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 0 20px;\n`;\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.IsLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.filter;\n","import React from 'react';\nimport { FilterInput, FilterLabel } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const onChange = e => dispatch(filterContact(e.target.value));\n\n  return (\n    <FilterLabel>\n      <span>Search contacts: </span>\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n      />\n    </FilterLabel>\n  );\n};\n\nexport default Filter;\n","import { styled } from 'styled-components';\n\nexport const StyledWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 20px;\n`;\n\nexport const ContactsItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  gap: 10px;\n  flex-wrap: wrap;\n  margin-bottom: 20px;\n`;\n","import { styled } from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const StyledFormTitle = styled.h1`\n  margin: 0 auto;\n  font-size: 30px;\n`;\n\nexport const Btn = styled.button`\n  align-items: center;\n  background-color: #fcfcfd;\n  border-radius: 4px;\n  border-width: 0;\n  box-shadow: rgba(45, 35, 66, 0.4) 0 2px 4px,\n    rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #d6d6e7 0 -3px 0 inset;\n  cursor: pointer;\n  max-width: 100%;\n  height: 48px;\n  padding-left: 15px;\n  padding-right: 15px;\n  text-align: center;\n  text-decoration: none;\n  transition: box-shadow 0.15s, transform 0.15s;\n  font-size: 15px;\n  text-transform: uppercase;\n\n  &:focus {\n    box-shadow: #d6d6e7 0 0 0 1.5px inset, rgba(45, 35, 66, 0.4) 0 2px 4px,\n      rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #d6d6e7 0 -3px 0 inset;\n  }\n\n  &:hover {\n    box-shadow: rgba(45, 35, 66, 0.4) 0 4px 8px,\n      rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #d6d6e7 0 -3px 0 inset;\n    transform: translateY(-2px);\n  }\n\n  &:active {\n    box-shadow: #d6d6e7 0 3px 7px inset;\n    transform: translateY(2px);\n  }\n`;\n\nexport const FormInput = styled.input`\n  color: #333;\n  font-size: 20px;\n  margin: 0 auto;\n  padding: 10px;\n  border-radius: 2px;\n  background-color: rgb(255, 255, 255);\n  border: none;\n  outline: none;\n  max-width: 100%;\n  border-bottom: 1px solid transparent;\n  box-shadow: rgba(45, 35, 66, 0.4) 0 2px 4px,\n    rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #d6d6e7 0 -3px 0;\n  transition: all 0.3s;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import React from 'react';\nimport { ContactsItem, StyledWrapper } from './ContactsList.styled';\nimport { Btn } from 'components/PhonebookForm/PhonebookForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nconst ContactsList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const getVisibleContacts = () =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <StyledWrapper>\n      <ul>\n        {Array.isArray(visibleContacts) &&\n          visibleContacts.map(contact => {\n            return (\n              <ContactsItem key={contact.id}>\n                <span>\n                  {contact.name}: {contact.number}\n                </span>\n                <Btn\n                  type=\"button\"\n                  onClick={() => dispatch(deleteContact(contact.id))}\n                >\n                  Delete\n                </Btn>\n              </ContactsItem>\n            );\n          })}\n      </ul>\n    </StyledWrapper>\n  );\n};\n\nexport default ContactsList;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Btn,\n  FormInput,\n  FormLabel,\n  StyledForm,\n  StyledFormTitle,\n} from './PhonebookForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nconst PhonebookForm = ({ title }) => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { value, name } = e.target;\n    if (name === 'name') setName(value);\n    if (name === 'number') setNumber(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = {\n      name,\n      number,\n    };\n    const normalizedContact = newContact.name.toLowerCase().trim();\n    const normalizedNumber = newContact.number.replaceAll(' ', '');\n\n    if (\n      contacts.some(el => el.name.toLowerCase().trim() === normalizedContact)\n    ) {\n      alert(`The contact name ${normalizedContact} is already exists!`);\n      return;\n    }\n\n    if (\n      contacts.some(el => el.number.replaceAll(' ', '') === normalizedNumber)\n    ) {\n      alert(`The contact number ${normalizedNumber} is already exists!`);\n      return;\n    }\n\n    dispatch(addContact(newContact));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <StyledFormTitle>{title}</StyledFormTitle>\n      <FormLabel>\n        <span>Name: </span>\n        <FormInput\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormLabel>\n      <FormLabel>\n        <span>Number: </span>\n        <FormInput\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormLabel>\n      <Btn type=\"submit\">Add contacts</Btn>\n    </StyledForm>\n  );\n};\n\nPhonebookForm.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default PhonebookForm;\n","import { styled } from 'styled-components';\n\nexport const SectionTitle = styled.h2`\n  display: table;\n  margin: 0 auto 20px;\n  font-size: 30px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SectionTitle } from './Title.styled';\n\nconst Title = ({ title }) => {\n  return <SectionTitle>{title}</SectionTitle>;\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import Filter from 'components/ContactsFilter/Filter';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport PhonebookForm from 'components/PhonebookForm/PhonebookForm';\nimport Title from 'components/Title/Title';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsAuthorized } from 'redux/auth/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isAuthorizated = useSelector(selectIsAuthorized);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isAuthorizated ? (\n        <div>\n          <PhonebookForm title=\"Phonebook\" />\n          <Title title=\"Contacts\"></Title>\n          {isLoading && !error && <b>Request in progress...</b>}\n          <Filter></Filter>\n          <ContactsList title=\"Contacts\" />\n          {error && <b>{error}</b>}\n        </div>\n      ) : (\n        <h1>Please log in to access the phonebook</h1>\n      )}\n    </>\n  );\n};\n\nexport default Contacts;\n","export const selectUser = state => state.auth.user.name;\nexport const selectIsAuthorized = state => state.auth.isAuthorized;\nexport const selectIsRefreshing = state => state.auth.isRefreshing;\n"],"names":["FilterInput","styled","_templateObject","_taggedTemplateLiteral","FilterLabel","_templateObject2","selectContacts","state","contacts","items","selectIsLoading","IsLoading","selectError","error","selectFilter","filter","useSelector","dispatch","useDispatch","_jsxs","children","_jsx","type","name","value","onChange","e","filterContact","target","StyledWrapper","ContactsItem","StyledForm","StyledFormTitle","Btn","_templateObject3","FormInput","_templateObject4","FormLabel","_templateObject5","visibleContacts","contact","toLowerCase","includes","Array","isArray","map","number","onClick","deleteContact","id","_ref","title","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","handleChange","_e$target","reset","onSubmit","preventDefault","newContact","normalizedContact","trim","normalizedNumber","replaceAll","some","el","alert","concat","addContact","pattern","required","SectionTitle","isAuthorizated","selectIsAuthorized","isLoading","useEffect","fetchContacts","_Fragment","PhonebookForm","Title","Filter","ContactsList","selectUser","auth","user","isAuthorized"],"sourceRoot":""}