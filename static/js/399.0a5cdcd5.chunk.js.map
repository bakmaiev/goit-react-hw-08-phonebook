{"version":3,"file":"static/js/399.0a5cdcd5.chunk.js","mappings":"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","sources":["components/ContactsFilter/Filter.styled.js","redux/contacts/selectors.js","components/ContactsFilter/Filter.jsx","components/ContactsList/ContactsList.styled.js","components/PhonebookForm/PhonebookForm.styled.js","components/ContactsList/ContactsList.jsx","components/PhonebookForm/PhonebookForm.jsx","components/Title/Title.jsx","pages/Contacts.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const FilterInput = styled.input`\n  color: #333;\n  font-size: 20px;\n  margin: 0 auto;\n  padding: 10px;\n  border-radius: 2px;\n  background-color: rgb(255, 255, 255);\n  border: none;\n  outline: none;\n  width: 280px;\n  resize: none;\n  border-bottom: 1px solid transparent;\n  box-shadow: rgba(45, 35, 66, 0.4) 0 2px 4px,\n    rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #d6d6e7 0 -3px 0;\n  transition: all 0.3s;\n`;\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 0 20px;\n`;\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.IsLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.filter;\n","import React from 'react';\nimport { FilterInput, FilterLabel } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const onChange = e => dispatch(filterContact(e.target.value));\n\n  return (\n    <div\n      style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}\n    >\n      <FilterLabel>\n        <span>Search contacts: </span>\n        <FilterInput\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={onChange}\n        />\n      </FilterLabel>\n    </div>\n  );\n};\n\nexport default Filter;\n","import { styled } from 'styled-components';\n\nexport const StyledWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  padding: 20px;\n`;\n\nexport const ContactsItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  gap: 10px;\n  flex-wrap: wrap;\n  margin-bottom: 20px;\n`;\n","import { styled } from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  padding: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const StyledFormTitle = styled.h1`\n  margin: 0 auto;\n  font-size: 30px;\n`;\n\nexport const Btn = styled.button`\n  align-items: center;\n  background-color: #fcfcfd;\n  border-radius: 4px;\n  border-width: 0;\n  box-shadow: rgba(45, 35, 66, 0.4) 0 2px 4px,\n    rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #d6d6e7 0 -3px 0 inset;\n  cursor: pointer;\n  width: 300px;\n\n  height: 48px;\n  padding-left: 15px;\n  padding-right: 15px;\n  text-align: center;\n  text-decoration: none;\n  transition: box-shadow 0.15s, transform 0.15s;\n  font-size: 15px;\n  text-transform: uppercase;\n\n  &:focus {\n    box-shadow: #d6d6e7 0 0 0 1.5px inset, rgba(45, 35, 66, 0.4) 0 2px 4px,\n      rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #d6d6e7 0 -3px 0 inset;\n  }\n\n  &:hover {\n    box-shadow: rgba(45, 35, 66, 0.4) 0 4px 8px,\n      rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #d6d6e7 0 -3px 0 inset;\n    transform: translateY(-2px);\n  }\n\n  &:active {\n    box-shadow: #d6d6e7 0 3px 7px inset;\n    transform: translateY(2px);\n  }\n`;\n\nexport const FormInput = styled.input`\n  color: #333;\n  font-size: 20px;\n  margin: 0 auto;\n  padding: 10px;\n  border-radius: 2px;\n  background-color: rgb(255, 255, 255);\n  border: none;\n  resize: none;\n  outline: none;\n  width: 280px;\n  border-bottom: 1px solid transparent;\n  box-shadow: rgba(45, 35, 66, 0.4) 0 2px 4px,\n    rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #d6d6e7 0 -3px 0;\n  transition: all 0.3s;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import React from 'react';\nimport { ContactsItem, StyledWrapper } from './ContactsList.styled';\nimport { Btn } from 'components/PhonebookForm/PhonebookForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nconst ContactsList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const getVisibleContacts = () =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <StyledWrapper>\n      <ul>\n        {Array.isArray(visibleContacts) &&\n          visibleContacts.map(contact => {\n            return (\n              <ContactsItem key={contact.id}>\n                <span>\n                  {contact.name}: {contact.number}\n                </span>\n                <Btn\n                  type=\"button\"\n                  onClick={() => dispatch(deleteContact(contact.id))}\n                >\n                  Delete\n                </Btn>\n              </ContactsItem>\n            );\n          })}\n      </ul>\n    </StyledWrapper>\n  );\n};\n\nexport default ContactsList;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Btn, FormInput, FormLabel, StyledForm } from './PhonebookForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { Notify } from 'notiflix';\nimport { Typography } from '@mui/material';\n\nconst PhonebookForm = ({ title }) => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { value, name } = e.target;\n    if (name === 'name') setName(value);\n    if (name === 'number') setNumber(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = {\n      name,\n      number,\n    };\n    const normalizedContact = newContact.name.toLowerCase().trim();\n    const normalizedNumber = newContact.number.replaceAll(' ', '');\n\n    if (\n      contacts.some(el => el.name.toLowerCase().trim() === normalizedContact)\n    ) {\n      Notify.warning(\n        `The contact name ${normalizedContact} is already exists!`\n      );\n      return;\n    }\n\n    if (\n      contacts.some(el => el.number.replaceAll(' ', '') === normalizedNumber)\n    ) {\n      Notify.warning(\n        `The contact number ${normalizedNumber} is already exists!`\n      );\n      return;\n    }\n\n    dispatch(addContact(newContact));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <Typography component=\"h2\" variant=\"h4\">\n        {title}\n      </Typography>\n      <FormLabel>\n        <span>Name: </span>\n        <FormInput\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormLabel>\n      <FormLabel>\n        <span>Number: </span>\n        <FormInput\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormLabel>\n      <Btn type=\"submit\">Add contacts</Btn>\n    </StyledForm>\n  );\n};\n\nPhonebookForm.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default PhonebookForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@mui/material';\n\nconst Title = ({ title }) => {\n  return (\n    <Typography\n      component=\"h2\"\n      variant=\"h4\"\n      sx={{ textAlign: 'center', mb: '20px' }}\n    >\n      {title}\n    </Typography>\n  );\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import Filter from 'components/ContactsFilter/Filter';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport PhonebookForm from 'components/PhonebookForm/PhonebookForm';\nimport Title from 'components/Title/Title';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsAuthorized } from 'redux/auth/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isAuthorized = useSelector(selectIsAuthorized);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return isAuthorized ? (\n    <div>\n      <PhonebookForm title=\"Phonebook\" />\n      <Title title=\"Contacts\"></Title>\n      {isLoading && !error && <CircularProgress color=\"inherit\" />}\n      <Filter></Filter>\n      <ContactsList title=\"Contacts\" />\n      {error && <b>{error}</b>}\n    </div>\n  ) : (\n    <h2>Sign in to access the phonebook!</h2>\n  );\n};\n\nexport default Contacts;\n"],"names":["FilterInput","styled","_templateObject","_taggedTemplateLiteral","FilterLabel","_templateObject2","selectContacts","state","contacts","items","selectIsLoading","IsLoading","selectError","error","selectFilter","filter","useSelector","dispatch","useDispatch","_jsx","style","display","alignItems","flexDirection","children","_jsxs","type","name","value","onChange","e","filterContact","target","StyledWrapper","ContactsItem","StyledForm","Btn","_templateObject3","FormInput","_templateObject4","FormLabel","_templateObject5","visibleContacts","contact","toLowerCase","includes","Array","isArray","map","number","onClick","deleteContact","id","_ref","title","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","handleChange","_e$target","reset","onSubmit","preventDefault","newContact","normalizedContact","trim","normalizedNumber","replaceAll","some","el","Notify","concat","addContact","Typography","component","variant","pattern","required","sx","textAlign","mb","isAuthorized","selectIsAuthorized","isLoading","useEffect","fetchContacts","PhonebookForm","Title","CircularProgress","color","Filter","ContactsList"],"sourceRoot":""}